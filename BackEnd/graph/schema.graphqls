directive @isAdmin on FIELD_DEFINITION|INPUT_FIELD_DEFINITION|MUTATION
directive @ownsOrIsAdmin(owningField: String!) on FIELD_DEFINITION

type Package {
  id: ID!
  displayName: String!
  name: String!
  description: String!
  sourceLink: String
  creator: User!
  verified: Boolean! @ownsOrIsAdmin(owningField: "creator.id")
  tags: [Tag!]!
  releases: [Release!]!
}

type User {
  id: ID!
  name: String!
  bio: String!
  admin: Boolean!
  email: String! @ownsOrIsAdmin(owningField: "id")
  verified: Boolean! @ownsOrIsAdmin(owningField: "id")
  packages: [Package!]
}

type Tag {
    id: ID!
    name: String!
    description: String!
    verified: Boolean! @isAdmin
    packages: [Package!]!
}

type Release {
    id: ID!
    package: Package!
    name: String!
    description: String!
    sourceLink: String!
    version: String!
    finVersion: String!
    verified: Boolean! @ownsOrIsAdmin(owningField: "package.creator.id")
    hash: String!
}

### Inputs

input NewPackage {
    name: String!
    displayName: String!
    description: String!
    sourceLink: String
    creatorId: ID
}

input UpdatePackage {
    id: ID!
    name: String
    displayName: String
    description: String
    sourceLink: String
}

input NewRelease {
    packageId: ID!
    name: String!
    description: String!
    sourceLink: String!
    version: String!
    finVersion: String!
}

input UpdateRelease {
    id: ID!
    name: String
    description: String
}

input NewTag {
    name: String!
    description: String!
}

input UpdateTag {
    id: ID!
    name: String
    description: String
}

### Queries

type Query {
    listPackages(page: Int! = 0, count: Int! = 50): [Package!]!
    getPackagesById(ids: [ID!]!): [Package]!
    getUsersById(ids: [ID!]!): [User]!
    getAllTags: [Tag!]!
}

### Mutations

type Mutation {
    createPackage(package: NewPackage!): Package!
    updatePackage(package: UpdatePackage!): Boolean!
    deletePackage(packageId: ID!): Boolean!
    newRelease(release: NewRelease!): Release!
    updateRelease(release: UpdateRelease!): Boolean!
    deleteRelease(releaseId: ID!): Boolean!
#    createUser(user: NewUser!): User!
#    updateUser(user: UpdateUser!): Boolean!
#    deleteUser(userId: ID!): Boolean!
    @isAdmin createTag(tag: NewTag!): Tag!
    @isAdmin updateTag(tag: UpdateTag!): Boolean!
    @isAdmin deleteTag(tagId: ID!): Boolean!
}
